name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.build-on }}
    continue-on-error: true
    strategy:
      matrix:
        include:
          - cpu: x86_64
            os: win
            target: x86_64-pc-windows-msvc
            build-on: windows-latest
            build-with: cargo
            exe: ".exe"
            run-tests: true
          - cpu: x86_64
            os: linux
            target: x86_64-unknown-linux-musl
            build-on: ubuntu-latest
            build-with: cargo
            exe: ""
            run-tests: true
          - cpu: aarch64
            os: linux
            target: aarch64-unknown-linux-musl
            build-on: ubuntu-latest
            build-with: cross
            exe: ""
            run-tests: false
          - cpu: aarch64
            os: macOS
            target: aarch64-apple-darwin
            build-on: macos-latest
            build-with: cargo
            exe: ""
            run-tests: false
          - cpu: x86_64
            os: macOS
            target: x86_64-apple-darwin
            build-on: macos-latest
            build-with: cargo
            exe: ""
            run-tests: true

    name: Build ${{ matrix.cpu }} ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Update Rust and add toolchain ${{ matrix.target }}
        if: matrix.build-with == 'cargo'
        run: |
          rustup update 
          rustup target add ${{ matrix.target }}

      - name: Install bin install if needed
        if: matrix.build-with == 'cross'
        run: |
          wget -qO- https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-x86_64-unknown-linux-musl.tgz | tar xvz -C ~/.cargo/bin

      - name: Install cross if needed
        if: matrix.build-with == 'cross'
        run: |
          cargo binstall cross -y

      - name: Check formatting
        if: matrix.run-tests
        run: |
          cargo fmt --check

      - name: Run tests
        if: matrix.run-tests
        run: |
          ${{ matrix.build-with }} test --profile dev --target ${{ matrix.target }} -- --nocapture

      - name: Build binary target/${{ matrix.target }}/release/yaftp
        run: |
          ${{ matrix.build-with }} build -p yaftp --bin gftp --features=bin --profile dev --target ${{ matrix.target }}
